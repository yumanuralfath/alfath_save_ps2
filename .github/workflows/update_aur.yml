name: Update AUR pkgver
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  update-aur:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Setup SSH key
        env:
          AUR_SSH_KEY: ${{ secrets.AUR_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # Add SSH private key
          echo "$AUR_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add AUR host key
          ssh-keyscan -H aur.archlinux.org >> ~/.ssh/known_hosts

          # Test SSH connection
          ssh -o StrictHostKeyChecking=no -T aur@aur.archlinux.org || echo "SSH test completed"

      - name: Setup Arch Linux environment
        run: |
          # Install archlinux-keyring and pacman in Ubuntu (alternative approach)
          # We'll use a different method to generate .SRCINFO
          sudo apt-get install -y curl jq

      - name: Update PKGBUILD
        run: |
          RELEASE_TAG=${GITHUB_REF#refs/tags/}
          VERSION=${RELEASE_TAG#v}
          echo "Release tag: $RELEASE_TAG"
          echo "Version: $VERSION"

          # Update pkgver in PKGBUILD
          sed -i "s/^pkgver=.*/pkgver=$VERSION/" PKGBUILD

          # Comment out dynamic pkgver() function if it exists
          sed -i 's/^pkgver()/#pkgver()/' PKGBUILD
          sed -i 's/^  git describe/#  git describe/' PKGBUILD || true
          sed -i 's/^}$/#}/' PKGBUILD || true

          echo "Updated PKGBUILD:"
          cat PKGBUILD

      - name: Generate SRCINFO manually
        run: |
          # Since we can't easily run makepkg in Ubuntu, we'll generate a basic .SRCINFO
          # This is a simplified version - ideally you'd use makepkg --printsrcinfo

          RELEASE_TAG=${GITHUB_REF#refs/tags/}
          VERSION=${RELEASE_TAG#v}

          # Extract basic info from PKGBUILD
          PKGNAME=$(grep "^pkgname=" PKGBUILD | cut -d'=' -f2)
          PKGDESC=$(grep "^pkgdesc=" PKGBUILD | cut -d'=' -f2-)
          ARCH=$(grep "^arch=" PKGBUILD | cut -d'=' -f2- || echo "('any')")
          URL=$(grep "^url=" PKGBUILD | cut -d'=' -f2- || echo "")
          LICENSE=$(grep "^license=" PKGBUILD | cut -d'=' -f2- || echo "")
          DEPENDS=$(grep "^depends=" PKGBUILD | cut -d'=' -f2- || echo "")
          SOURCE=$(grep "^source=" PKGBUILD | cut -d'=' -f2- || echo "")

          cat > .SRCINFO << EOF
          pkgbase = ${PKGNAME//[\'\"]/ }
          	pkgdesc = ${PKGDESC//[\'\"]/ }
          	pkgver = $VERSION
          	pkgrel = 1
          	url = ${URL//[\'\"]/ }
          	arch = any
          	license = ${LICENSE//[\'\"]/ }
          	source = ${SOURCE//[\'\"]/ }

          pkgname = ${PKGNAME//[\'\"]/ }
          EOF

          echo "Generated .SRCINFO:"
          cat .SRCINFO

      - name: Clone AUR repo and update
        env:
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
        run: |
          RELEASE_TAG=${GITHUB_REF#refs/tags/}
          VERSION=${RELEASE_TAG#v}

          # Clone AUR repository
          git clone ssh://aur@aur.archlinux.org/alfathsave.git aur

          # Copy updated files
          cp PKGBUILD .SRCINFO aur/

          # Commit and push changes
          cd aur
          git config user.name "GitHub Actions Bot"
          git config user.email "noreply@github.com"

          # Check if there are changes
          if ! git diff --quiet; then
            git add PKGBUILD .SRCINFO
            git commit -m "Update to version $VERSION"
            git push
            echo "Successfully updated AUR package to version $VERSION"
          else
            echo "No changes detected"
          fi
